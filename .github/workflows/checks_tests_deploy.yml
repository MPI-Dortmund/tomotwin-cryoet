name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    defaults:
      run:
        shell: bash -el {0}
    steps:
    - uses: actions/checkout@v3
    - name: Set up conda ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        activate-environment: tomotwin
        channel-priority: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge, pytorch, nvidia, rapidsai, defaults
        environment-file: conda_env.yml
    - run: conda --version
    - run: conda init bash
    - run: |
        which python
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools setuptools_scm pylint tox tox-gh-actions pytest pytest-coverage twine build
        pip install .
    - name: Debug Info
      run: |
        which python
        pip freeze
    - name: Analysing the code with pylint
      run: |
        pylint -E $(git ls-files '*.py')
    - name: Tests
      run: |
        pytest -v --cov=./ --cov-report=xml --cov-config=.coveragerc
      env:
        PLATFORM: ${{ matrix.platform }}
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    # github secrets (see readme for details)
    needs: [ build ]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine build

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          git tag
          python -m build .
          twine upload dist/*